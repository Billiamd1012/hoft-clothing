<!doctype html>
{%- capture dir -%}
	{%- case request.locale.iso_code -%}
	  {%- when 'ae' or 'ar' or 'arc' or 'bcc' or 'bqi' or 'ckb' or 'dv' or 'fa' or 'glk' or 'ha' or 'he' or 'kwh' or 'ks' or 'ku' or 'mzn' or 'nqo' or 'pnb' or 'ps' or 'sd' or 'ug' or 'ur' or 'yi' -%}
	    rtl
	  {%- else -%}
	    ltr
	{%- endcase -%}
{%- endcapture -%}
<html class="no-js" lang="{{ request.locale.iso_code }}" dir="{{ dir }}">
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=5, viewport-fit=cover">
	<meta name="theme-color" content="{{ settings.color_body_bg }}">
	<link rel="canonical" href="{{ canonical_url }}">
	<link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
	{% render 'head-preload' %}

	{% if settings.favicon != blank -%}
		<link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
	{%- endif %}

	<title>
	{{ page_title }}{% if current_tags %}{% assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags }}{% endif %}{% if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}{% unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless %}
	</title>

	{% if page_description %}
	<meta name="description" content="{{ page_description | escape }}">
	{% endif %}

	{%- unless settings.heading_font.system? and settings.body_font.system? -%}
		<link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
	{%- endunless -%}

	{% render 'social-meta-tags' %}

	{{ 'app.css' | asset_url | stylesheet_tag }}
	{{ 'product-grid.css' | asset_url | stylesheet_tag }}

	{% render 'head-variables' %}

	<script>
		window.theme = window.theme || {};
		theme = {
			settings: {
				money_with_currency_format: {{- shop.money_format | json -}},
				cart_drawer: {{- settings.cart_drawer -}}
			},
			routes: {
				root_url: '{{ routes.root_url }}',
				cart_url: '{{ routes.cart_url }}',
				cart_add_url: '{{ routes.cart_add_url }}',
				search_url: '{{ routes.search_url }}',
				cart_change_url: '{{ routes.cart_change_url }}',
				cart_update_url: '{{ routes.cart_update_url }}',
				predictive_search_url: '{{ routes.predictive_search_url }}',
			},
			variantStrings: {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
      },
			strings: {
				requiresTerms: `{{ 'sections.cart.terms_confirm' | t }}`,
			}
		};
	</script>
	{{ content_for_header }} <!-- Header hook for plugins -->

	<script>document.documentElement.className = document.documentElement.className.replace('no-js', 'js');</script>
</head>
<body class="animations-{{ settings.animations }} button-uppercase-{{ settings.button_uppercase }} navigation-uppercase-{{ settings.navigation_uppercase }} product-card-spacing-{{ settings.product_card_spacing }} article-card-spacing-{{ settings.article_card_spacing }} {% if customer %} customer-logged-in{% endif %} template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }} template-{{ template | replace: '.', '-' | handle }}">
	<a class="screen-reader-shortcut" href="#main-content">{{ 'accessibility.skip_to_text' | t }}</a>
	<div id="wrapper">
		<div class="header--sticky"></div>
		{% sections 'header-group' %}
		<div role="main" id="main-content">
			{{ content_for_layout }}
		</div>
		{% sections 'footer-group' %}
		{% render 'cart-drawer' %}
		{% render 'product-drawer' %}
		{% render 'search-drawer' %}
		<div class="click-capture"></div>
		<div class="click-capture--product"></div>
	</div>

	{{ 'vendor.min.js' | asset_url | script_tag }}
	{% if settings.animations %}
		{{ 'animations.min.js' | asset_url | script_tag }}
		<script>
			gsap.defaults({
				ease: Power4.easeOut
			});
			gsap.config({
		    nullTargetWarn: false
		  });
			gsap.registerPlugin(ScrollTrigger, DrawSVGPlugin);
		</script>
	{% endif %}
	{{ 'product.js' | asset_url | script_tag }}
	{{ 'slideshow.js' | asset_url | script_tag }}
	{{ 'app.js' | asset_url | script_tag }}
	<script type="module" src="{{ 'scroll-shadow.js' | asset_url }}" defer="defer"></script>
	<script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
	{%- if settings.free_shipping -%}
		{{ 'free-shipping.js' | asset_url | script_tag }}
		{{ 'free-shipping.css' | asset_url | stylesheet_tag }}
	{%- endif -%}
	{%- if request.design_mode -%}
		{{ 'theme-editor.js' | asset_url | script_tag }}
	{%- endif -%}
	{% render 'back-to-top' %}
</body>
</html>
<!-- Begin Shopify-Afterpay JavaScript Snippet (v1.2.1) -->
{% if cart.currency.iso_code == shop.currency %}
<script type="text/javascript">
// Overrides:
// var afterpay_msg_size = 'sm';  // Can be 'xs', 'sm', 'md' or 'lg'.
// var afterpay_bold_amount = true;
// var afterpay_logo_theme = 'colour';  // Can be 'colour', 'black' or 'white'.
// var afterpay_modal_open_icon = true;
// var afterpay_hide_upper_limit = false;
// var afterpay_hide_lower_limit = true;
// var afterpay_show_if_outside_limits = true;

// var afterpay_product_integration_enabled = true;
// var afterpay_product_selector = '#product-price-selector';
// var afterpay_variable_price_fallback = false;
// var afterpay_variable_price_fallback_selector = '';
// var afterpay_variable_price_fallback_method = 'mutation';  // Can be 'mutation' or 'interval'.

// var afterpay_cart_integration_enabled = true;
// var afterpay_cart_static_selector = '#cart-subtotal-selector';
// var afterpay_variable_subtotal_fallback = false;
// var afterpay_variable_subtotal_fallback_selector = '';
// var afterpay_variable_subtotal_fallback_method = 'mutation'; // Can be 'mutation' or 'interval'.

// var afterpay_dynamic_cart_integration_enabled = false;
// var afterpay_dynamic_cart_selector = '.cart-drawer__footer .totals';
// var afterpay_dynamic_cart_observer_target = '#CartDrawer';

// var afterpay_footer_logo_enabled = true;
// var afterpay_footer_logo_format = 'icon';  // Can be 'icon', 'stacked' or 'logo'.
// var afterpay_footer_logo_theme = 'colour'; // Can be 'colour', 'black' or 'white'.
// var afterpay_footer_logo_background = 'border';  // Can be 'border' or 'transparent'.
// var afterpay_footer_logo_container = 'footer ul.payment-icons';
// var afterpay_footer_logo_template = '<li class="payment-icon"><object data="{logo_path}" type="image/svg+xml"></object></li>';

// Non-editable fields:
var afterpay_js_language = {{ localization.language.iso_code | slice: 0, 2 | json }};
var afterpay_js_country = {{ localization.country.iso_code | json }};
var afterpay_shop_currency = {{ shop.currency | json }};
var afterpay_cart_currency = {{ cart.currency.iso_code | json }};
var afterpay_shop_money_format = {{ shop.money_format | json }};
var afterpay_shop_permanent_domain = {{ shop.permanent_domain | json }};
var afterpay_theme_name = {{ theme.name | json }};
var afterpay_product = {{ product | json }};
var afterpay_product_collections = {{ product.collections | map: 'title' | join: ',' | json }};
var afterpay_current_variant = {{ product.selected_or_first_available_variant | json }};
var afterpay_cart_total_price = {{ cart.total_price | json }};
var afterpay_cart_skus = {{cart.items | map: 'sku' | join: ',' | json }};
var afterpay_cart_collections = {{cart.items | map: 'product' | map: 'collections' | map: 'title' | uniq | join: ',' | json }};
var afterpay_js_snippet_version = '1.2.1';
</script>
<script type="text/javascript" src="https://static.afterpay.com/shopify-afterpay-javascript.js"></script>
{% else %}
<!-- Afterpay disabled: {{ cart.currency.iso_code }} != {{ shop.currency }} -->
{% endif %}
<!-- End Shopify-Afterpay JavaScript Snippet (v1.2.1) -->